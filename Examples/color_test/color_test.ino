#include <Adafruit_GFX.h>    // Core graphics library
#include <GDShield_Capabilities.h>
#include <GDShields.h>

GDS tft;

uint16_t colors[] = {
ALICEBLUE,
ANTIQUEWHITE,
AQUA,
AQUAMARINE,
AZURE,
BEIGE,
BISQUE,
BLACK,
BLANCHEDALMOND,
BLUE,
BLUEVIOLET,
BROWN,
BURLYWOOD,
CADETBLUE,
CHARTREUSE,
CHOCOLATE,
CORAL,
CORNFLOWERBLUE,
CORNSILK,
CRIMSON,
CYAN,
DARKBLUE,
DARKCYAN,
DARKGOLDENROD,
DARKGRAY,
DARKGREEN,
DARKGREY,
DARKKHAKI,
DARKMAGENTA,
DARKOLIVEGREEN,
DARKORANGE,
DARKORCHID,
DARKRED,
DARKSALMON,
DARKSEAGREEN,
DARKSLATEBLUE,
DARKSLATEGRAY,
DARKSLATEGREY,
DARKTURQUOISE,
DARKVIOLET,
DEEPPINK,
DEEPSKYBLUE,
DIMGRAY,
DIMGREY,
DODGERBLUE,
FIREBRICK,
FLORALWHITE,
FORESTGREEN,
FUCHSIA,
GAINSBORO,
GHOSTWHITE,
GOLD,
GOLDENROD,
GRAY,
GREEN,
GREENYELLOW,
GREY,
HONEYDEW,
HOTPINK,
INDIANRED,
INDIGO,
IVORY,
KHAKI,
LAVENDER,
LAVENDERBLUSH,
LAWNGREEN,
LEMONCHIFFON,
LIGHTBLUE,
LIGHTCORAL,
LIGHTCYAN,
LIGHTGOLDENRODYELLOW,
LIGHTGRAY,
LIGHTGREEN,
LIGHTGREY,
LIGHTPINK,
LIGHTSALMON,
LIGHTSEAGREEN,
LIGHTSKYBLUE,
LIGHTSLATEGRAY,
LIGHTSLATEGREY,
LIGHTSTEELBLUE,
LIGHTYELLOW,
LTGRAY,
MEDGRAY,
DKGRAY,
MONEYGREEN,
LEGACYSKYBLUE,
CREAM,
LIME,
LIMEGREEN,
LINEN,
MAGENTA,
MAROON,
MEDIUMAQUAMARINE,
MEDIUMBLUE,
MEDIUMORCHID,
MEDIUMPURPLE,
MEDIUMSEAGREEN,
MEDIUMSLATEBLUE,
MEDIUMSPRINGGREEN,
MEDIUMTURQUOISE,
MEDIUMVIOLETRED,
MIDNIGHTBLUE,
MINTCREAM,
MISTYROSE,
MOCCASIN,
NAVAJOWHITE,
NAVY,
OLDLACE,
OLIVE,
OLIVEDRAB,
ORANGE,
ORANGERED,
ORCHID,
PALEGOLDENROD,
PALEGREEN,
PALETURQUOISE,
PALEVIOLETRED,
PAPAYAWHIP,
PEACHPUFF,
PERU,
NATURELPINK,
PLUM,
POWDERBLUE,
PURPLE,
RED,
ROSYBROWN,
ROYALBLUE,
SADDLEBROWN,
SALMON,
SANDYBROWN,
SEAGREEN,
SEASHELL,
SIENNA,
SILVER,
SKYBLUE,
SLATEBLUE,
SLATEGRAY,
SLATEGREY,
SNOW,
SPRINGGREEN,
STEELBLUE,
TAN,
TEAL,
THISTLE,
TOMATO,
TURQUOISE,
VIOLET,
WHEAT,
WHITE,
WHITESMOKE,
YELLOW,
YELLOWGREEN,
NULL,
};

const char *names[] = {
"ALICEBLUE",
"ANTIQUEWHITE",
"AQUA",
"AQUAMARINE",
"AZURE",
"BEIGE",
"BISQUE",
"BLACK",


"BLANCHEDALMOND",
"BLUE",
"BLUEVIOLET",
"BROWN",
"BURLYWOOD",
"CADETBLUE",
"CHARTREUSE",
"CHOCOLATE",
"CORAL",
"CORNFLOWERBLUE",
"CORNSILK",
"CRIMSON",
"CYAN",
"DARKBLUE",
"DARKCYAN",
"DARKGOLDENROD",
"DARKGRAY",
"DARKGREEN",
"DARKGREY",
"DARKKHAKI",
"DARKMAGENTA",
"DARKOLIVEGREEN",
"DARKORANGE",
"DARKORCHID",
"DARKRED",
"DARKSALMON",
"DARKSEAGREEN",
"DARKSLATEBLUE",
"DARKSLATEGRAY",
"DARKSLATEGREY",
"DARKTURQUOISE",
"DARKVIOLET",
"DEEPPINK",
"DEEPSKYBLUE",
"DIMGRAY",
"DIMGREY",
"DODGERBLUE",
"FIREBRICK",
"FLORALWHITE",
"FORESTGREEN",
"FUCHSIA",
"GAINSBORO",
"GHOSTWHITE",
"GOLD",
"GOLDENROD",
"GRAY",
"GREEN",
"GREENYELLOW",
"GREY",
"HONEYDEW",
"HOTPINK",
"INDIANRED",
"INDIGO",
"IVORY",
"KHAKI",
"LAVENDER",
"LAVENDERBLUSH",
"LAWNGREEN",
"LEMONCHIFFON",
"LIGHTBLUE",
"LIGHTCORAL",
"LIGHTCYAN",
"LIGHTGOLDENRODYELLOW",
"LIGHTGRAY",
"LIGHTGREEN",
"LIGHTGREY",
"LIGHTPINK",
"LIGHTSALMON",
"LIGHTSEAGREEN",
"LIGHTSKYBLUE",
"LIGHTSLATEGRAY",
"LIGHTSLATEGREY",
"LIGHTSTEELBLUE",
"LIGHTYELLOW",
"LTGRAY",
"MEDGRAY",
"DKGRAY",
"MONEYGREEN",
"LEGACYSKYBLUE",
"CREAM",
"LIME",
"LIMEGREEN",
"LINEN",
"MAGENTA",
"MAROON",
"MEDIUMAQUAMARINE",
"MEDIUMBLUE",
"MEDIUMORCHID",
"MEDIUMPURPLE",
"MEDIUMSEAGREEN",
"MEDIUMSLATEBLUE",
"MEDIUMSPRINGGREEN",
"MEDIUMTURQUOISE",
"MEDIUMVIOLETRED",
"MIDNIGHTBLUE",
"MINTCREAM",
"MISTYROSE",
"MOCCASIN",
"NAVAJOWHITE",
"NAVY",
"OLDLACE",
"OLIVE",
"OLIVEDRAB",
"ORANGE",
"ORANGERED",
"ORCHID",
"PALEGOLDENROD",
"PALEGREEN",
"PALETURQUOISE",
"PALEVIOLETRED",
"PAPAYAWHIP",
"PEACHPUFF",
"PERU",
"NATURELPINK",
"PLUM",
"POWDERBLUE",
"PURPLE",
"RED",
"ROSYBROWN",
"ROYALBLUE",
"SADDLEBROWN",
"SALMON",
"SANDYBROWN",
"SEAGREEN",
"SEASHELL",
"SIENNA",
"SILVER",
"SKYBLUE",
"SLATEBLUE",
"SLATEGRAY",
"SLATEGREY",
"SNOW",
"SPRINGGREEN",
"STEELBLUE",
"TAN",
"TEAL",
"THISTLE",
"TOMATO",
"TURQUOISE",
"VIOLET",
"WHEAT",
"WHITE",
"WHITESMOKE",
"YELLOW",
"YELLOWGREEN",
"NULL",
};

uint16_t w, h, ha;
#define AREA 8
Point P[AREA];

void setup(void) {
    int i;
    uint16_t ID = tft.readID(); 
    tft.begin(ID);
    tft.setRotation(0);
    w = tft.width();
    h = tft.height();
    tft.setTextSize(2);
    tft.fillRect(0, 0, w, h, BLACK);
    ha = h / AREA;
    for (i = 0; i < AREA; i++) {
      P[i] = Point(0, i*ha);
    }
}

void loop(void)
{
  int i, j;

  i = 0; j = 0;
  while (strcmp(names[j], "NULL") ) {
  // for (i = 0; i < AREA; i++) {
    tft.fillRect(P[i].x, P[i].y, w, ha, colors[j]);
    tft.setCursor(P[i].x, P[i].y);
    tft.print(names[j]);
    i++;
    j++;
    if (i == 8) {
      i = 0;
      delay(5000);
    }
  }
  delay(5000);
}
